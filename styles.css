@import url('https://fonts.googleapis.com/css2?family=Pixelify+Sans&family=Roboto&display=swap');

:root {
    /* font-family: 'Pixelify Sans'; */
    /* font-size: 5rem;
    font-weight: 600; */
    --prussian-blue: #0b3954ff;
    --teal: #087e8bff;
    --columbia-blue: #bfd7eaff;
    --bittersweet: #ff5a5fff;
    --fire-engine-red: #c81d25ff;
    --square-width: 100px;
    /* height: 100%;
    width: 100%; */

}

* {
    margin: 0;
    padding: 0;
    /* if we start to have problems with height and width,
    remove these from the universal selector and relocate them 
    to :root, body, container */
    /* height: 100%;
    width: 100% */
}

body {
    height: 100vh;
    /* width: 100%;
    height: 100%; */
    font-family: 'Pixelify Sans';
    /* margin: 0;
    padding: 0; */
}

/* for some reason the buttons didn't inherit our body's font, so we need this: */
button {
    font-family: inherit;
}

.container {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 4fr;
    grid-template-rows: 1fr 4fr 0.5fr;
}

.header {
    background-color: var(--prussian-blue);
    grid-column: 1 / 3;
    grid-row: 1 / 2;

    color: white;
    font-size: 3rem;
    letter-spacing: 0.2rem;
    /* line-height: 1rem; */

    display: flex;
    justify-content: center;
    align-items: center;
}

.sidebar {
    background-color: var(--teal);
    grid-column: 1 / 2;
    grid-row: 2 / 3;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.player-1-label,
.player-2-label {
    font-size: 2rem;
    height: 75px;
}

.player-1-name,
.player-2-name {
    font-size: 2rem;
    /* height: 20px; */
}

.sidebar>div {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 125px;
}

.main {
    position: relative;
    /* (so that we can position the modal/dialog relative to the main) */
    background-color: white;
    grid-column: 2 / 3;
    grid-row: 2 / 3;

    display: flex;
    justify-content: center;
    align-items: center;

}

.footer {
    background-color: var(--prussian-blue);
    grid-column: 1 / 3;
    grid-row: 3 / 4;
}

.game-container {

    background-color: red;
    width: auto;
    /* calc(var(--square-width) * 3); */
    height: auto;
    /* calc(var(--square-width) * 3); */

    display: grid;
    justify-content: center;
    align-items: center;
    grid-template-columns: repeat(3, var(--square-width));
    grid-template-rows: repeat(3, var(--square-width));
    gap: 10px;
}

/* for the end game popup that happens when tie or win */
.end-game {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    /* flex-direction: column; */
    /* grid-column: 2 / 3;
    grid-row: 2 / 3; */
    position: absolute;
    /* transform: translate(-50%, -50%); */
    top: 50%;
    left: 50%;

    width: 350px;
    height: 150px;

    z-index: 0;


}

.start-game[open] {
    display: flex;
}

.start-game {
    /* display: flex; */
    flex-direction: column;
    justify-content: space-around;
    align-items: center;

    position: absolute;
    top: 50%;

    left: 50%;
    transform: translate(-50%, -50%);


    width: 400px;
    height: 375px;

    font-size: 2rem;
    padding: 10px;

}

fieldset {
    border: none;
}

input {
    height: 1.5rem;
    font-family: inherit;
    font-size: 1rem;
}

.start-game>button {
    width: auto;
    height: auto;

    font-size: 1.5rem;
}

/* WE'RE HAVING ISSUES CENTERING .ENDGAME WITH RESPECT TO .MAIN */
/* MAYBE WE COULD MOVE .END-GAME INSIDE OF .GAME-CONTAINER AND SEE IF THAT WORKS? */

.end-game>button,
.end-game>div {
    width: auto;
    height: auto;

    font-size: 1.5rem;
}


.square {
    /* content: center;
    align-items: center; */
    width: var(--square-width);
    height: var(--square-width);
    background-color: brown;

    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3rem;
}